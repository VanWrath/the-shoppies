{"version":3,"sources":["components/movieItem.js","components/movieList.js","App.js","reportWebVitals.js","index.js"],"names":["movieItem","props","state","animationCss","nominated","beingRemoved","movie","this","className","src","Poster","alt","Title","Year","type","onClick","check","disabled","Component","movieList","listMovies","movies","map","imdbID","App","searchMovies","text","a","fetch","then","res","json","data","setState","Search","onTextChange","event","target","value","searchText","length","nominateMovie","nomineesList","nominees","push","removeNomination","i","splice","checkNominated","bind","localStorage","getItem","savedNominees","JSON","parse","stringify","setItem","href","role","name","id","aria-describedby","placeholder","onChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6400fca4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\n/* Props:\r\n* key : string\r\n* movie : object\r\n* onClick : function\r\n* check : function\r\n* nominated : boolean\r\n*/\r\nexport default class movieItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           animationCss : this.props.nominated ? 'new-item' : '',\r\n           beingRemoved: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var movie = this.props.movie;\r\n        return (\r\n            <li className={'my-3 row text-center ' + this.state.animationCss }>\r\n                <div className='col-5'>\r\n                    <img src={movie.Poster} className=\"img-fluid\" alt=\"Movie Poster\"/>\r\n                </div>\r\n                <div className='col-7'>\r\n                    <div className='col'> \r\n                        <p className='movieTitle'>{movie.Title} ({movie.Year})</p>\r\n                    </div>\r\n                    <div className='col'>\r\n                        { this.props.nominated\r\n                            ? <button type=\"button\" className=\"btn btn-danger m-3\" \r\n                            onClick={() => {this.props.onClick(movie)}}>\r\n                                    Remove\r\n                                </button>\r\n\r\n                            : (!this.props.check(movie)\r\n                                ? <button type=\"button\" className=\"btn btn-primary \" onClick={()=> {this.props.onClick(movie)}}>Nominate</button>\r\n                                : <button type=\"button\" className=\"btn btn-primary \" disabled>Nominate</button>)\r\n                        \r\n                        }\r\n                    </div>\r\n                </div>                \r\n            </li>\r\n        )\r\n    }\r\n}","import MovieItem from './movieItem';\r\n\r\nimport React, { Component } from 'react'\r\n\r\n/* Props\r\n*  movies : array\r\n*  onClick : function\r\n*  check : function\r\n*  nominated : boolean\r\n*/\r\nexport default class movieList extends Component {\r\n    render() {\r\n        const movies = this.props.movies;\r\n        const listMovies = movies.map((movie)=>\r\n            <MovieItem key={movie.imdbID} movie={movie} onClick={this.props.onClick} check={this.props.check} nominated={this.props.nominated}/>\r\n        );\r\n        return (\r\n            <ul className='p-1'>{listMovies}</ul>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport MovieList from './components/movieList';\n\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      nominees: [],\n      searchText: '',\n      movies: []\n    }\n    this.searchMovies = this.searchMovies.bind(this);\n    this.onTextChange = this.onTextChange.bind(this);\n    this.nominateMovie = this.nominateMovie.bind(this);\n    this.removeNomination = this.removeNomination.bind(this);\n    this.checkNominated = this.checkNominated.bind(this);\n  }\n\n  componentDidMount() {\n    //load user's nominees list from local storage.\n    const json = localStorage.getItem(\"nominees\");\n    const savedNominees = JSON.parse(json);\n    if (savedNominees) {\n      this.setState({nominees: savedNominees});\n    }\n  }\n\n  componentDidUpdate() {\n    //save nominees list to local storage\n    const json = JSON.stringify(this.state.nominees);\n    localStorage.setItem(\"nominees\", json);\n  }\n\n  //makes a request to the omdbapi to search to movies\n  searchMovies = async(text) => {\n    const res = await fetch(\"https://www.omdbapi.com/?s=\" + text + \"&type=movie&apikey=cda9abc8\")\n    .then(res => res.json()).then(data =>  {\n      this.setState({movies: data.Search});\n    }\n      );\n    return res;\n  };\n\n  //handles search box change\n  onTextChange = (event) => {\n    var text = event.target.value;\n    this.setState({searchText: text});\n   if(text.length > 0) {\n     this.searchMovies(text);\n   }\n }\n\n //nominates the movie the user picks\n  nominateMovie = (movie) => {\n    var nomineesList = this.state.nominees;\n      if(this.state.nominees.length < 5){\n        nomineesList.push(movie);\n        this.setState({nominees: nomineesList});\n        \n      }\n  }\n\n  //removes a movie from the nominee list\n  removeNomination = (movie) => {\n    var nomineesList = this.state.nominees;\n    for(let i = 0; i < this.state.nominees.length; i++){\n      if(movie.imdbID === this.state.nominees[i].imdbID){\n        nomineesList.splice(i,1);\n        this.setState({nominees: nomineesList});\n      }\n    }\n  }\n\n  //checks if a movie is in the nominated list\n  checkNominated = (movie) => {\n    for (let i = 0; i < this.state.nominees.length; i++){\n      if(movie.imdbID === this.state.nominees[i].imdbID){\n        return true;\n      }\n    }\n    return false;\n  }\n\n  render() {\n    return (\n        <div className=\"container text-light \">\n          <div className=\"d-block text-right\">\n            <a href='https://github.com/VanWrath/the-shoppies' className=\"external-link\"><i className=\"fab fa-github-square\"/></a>\n          </div>\n        \n        {/* Notification*/}\n        {this.state.nominees.length === 5 &&\n        <div className=\"alert alert-primary sticky-top\" role=\"alert\">\n          <strong>You are done picking your 5 movie nominees.</strong>\n        </div>}\n        \n        {/* Page Title */}\n        <h1 className='my-5'>The Shoppies</h1>\n        <p>Search and nominate movies for the Shoppies awards.</p>\n  \n        {/* Search bar */}\n        <div className=\"row bg-dark p-4 m-0\">\n          <div className=\"col\">\n            <form className=\"form-group\">\n              <label>Movie Titles</label>\n              <input type=\"text\" className=\"form-control\" name=\"searchbox\" id=\"search\" aria-describedby=\"helpId\" placeholder=\"Search\" onChange={this.onTextChange}/>\n            </form>\n          </div>\n        </div>\n\n        <div className=\"row\">\n\n          {/* Search Results */}\n          <div className=\"col bg-dark m-3 p-4\">\n            <h4 className='mb-4'>Results for \"{this.state.searchText}\"</h4>\n           {typeof this.state.movies !== 'undefined' && this.state.movies.length > 0 &&\n              <MovieList movies={this.state.movies} onClick={this.nominateMovie} check={this.checkNominated} nominated={false}/>\n           }\n          </div>\n  \n          {/* Nominations list */}\n          <div className=\"col bg-dark m-3 p-4\">\n          <h4 className='mb-4'>Nominations</h4>\n          {this.state.nominees.length > 0 &&\n              <MovieList movies={this.state.nominees} onClick={this.removeNomination} nominated={true}/>\n           }\n          </div>\n        </div>\n      </div>\n  );\n}\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}