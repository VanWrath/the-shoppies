{"version":3,"sources":["services/http-service.js","components/movieItem.js","components/movieList.js","App.js","reportWebVitals.js","index.js"],"names":["HttpService","searchMovies","searchText","Promise","resolve","reject","fetch","then","res","json","movieItem","props","state","animationCss","nominated","beingRemoved","movie","this","console","log","className","src","Poster","alt","Title","Year","type","onClick","check","disabled","Component","movieList","listMovies","movies","map","imdbID","App","text","a","data","setState","Search","onTextChange","event","target","value","length","nominateMovie","nomineesList","nominees","push","removeNomination","i","splice","checkNominated","bind","localStorage","getItem","savedNominees","JSON","parse","stringify","setItem","role","name","id","aria-describedby","placeholder","onChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d7de318.chunk.js","sourcesContent":["class HttpService {\r\n     searchMovies = (searchText) => {\r\n        var promise = new Promise((resolve, reject) => {\r\n            fetch(\"http://www.omdbapi.com/?s=\" + searchText + \"&apikey=cda9abc8\")\r\n            .then((res) =>{\r\n                resolve(res.json());\r\n            });\r\n        });\r\n        return promise;\r\n      };\r\n}\r\n\r\nexport default HttpService;","import React, { Component } from 'react'\r\n\r\n/* Props:\r\n* movie : object\r\n* onclick : function\r\n* check : function\r\n* nominated : boolean\r\n*/\r\nexport default class movieItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           animationCss : this.props.nominated ? 'new-item' : '',\r\n           beingRemoved: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var movie = this.props.movie;\r\n        //console.log(this.props.check && !this.props.nominated)\r\n        console.log(this.state.beingRemoved);\r\n        return (\r\n            <li className={'my-3 row text-center ' + this.state.animationCss }>\r\n                <div className='col-5'>\r\n                    <img src={movie.Poster} className=\"img-fluid ${3|rounded-top,rounded-right,rounded-bottom,rounded-left,rounded-circle,|}\" alt=\"No Image\"/>\r\n                </div>\r\n                <div className='col-7'>\r\n                    <div className='col'> \r\n                        <p className='movieTitle'>{movie.Title} ({movie.Year})</p>\r\n                    </div>\r\n                    <div className='col'>\r\n                        { this.props.nominated\r\n                            ? <button type=\"button\" className=\"btn btn-danger m-3\" \r\n                            onClick={() => {this.props.onClick(movie)}}>\r\n                                    Remove\r\n                                </button>\r\n\r\n                            : (!this.props.check(movie)\r\n                                ? <button type=\"button\" className=\"btn btn-primary \" onClick={()=> {this.props.onClick(movie)}}>Nominate</button>\r\n                                : <button type=\"button\" className=\"btn btn-primary \" disabled>Nominate</button>)\r\n                        \r\n                        }\r\n                    </div>\r\n                </div>                \r\n            </li>\r\n        )\r\n    }\r\n}","import MovieItem from './movieItem';\r\n\r\nimport React, { Component } from 'react'\r\n\r\n/* Props\r\n*  movies : Array\r\n*  onClick : function\r\n*  check : function\r\n*  nominated : boolean\r\n*/\r\nexport default class movieList extends Component {\r\n    render() {\r\n        const movies = this.props.movies;\r\n        const listMovies = movies.map((movie)=>\r\n            <MovieItem key={movie.imdbID} movie={movie} onClick={this.props.onClick} check={this.props.check} nominated={this.props.nominated}/>\r\n        );\r\n        return (\r\n            <ul className='p-1'>{listMovies}</ul>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport HttpService from \"./services/http-service\";\nimport MovieList from './components/movieList';\n\nconst http = new HttpService();\nvar testList = [ \n  {Title: \"Batman\",Year: 1989, imdbID : 'tt0096895'},\n  {Title: \"The Avengers\", Year: 2012, imdbID : 'tt0848228'}\n]\n\nexport default class App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      nominees: [],\n      searchText: '',\n      movies: []\n    }\n    this.searchMovies = this.searchMovies.bind(this);\n    this.onTextChange = this.onTextChange.bind(this);\n    this.nominateMovie = this.nominateMovie.bind(this);\n    this.removeNomination = this.removeNomination.bind(this);\n    this.checkNominated = this.checkNominated.bind(this);\n  }\n\n  componentDidMount() {\n    const json = localStorage.getItem(\"nominees\");\n    const savedNominees = JSON.parse(json);\n    if (savedNominees) {\n      this.setState({nominees: savedNominees});\n    }\n  }\n\n  componentDidUpdate() {\n    const json = JSON.stringify(this.state.nominees);\n    localStorage.setItem(\"nominees\", json);\n  }\n\n  searchMovies = async(text) => {\n    var movies;\n    const res = await fetch(\"http://www.omdbapi.com/?s=\" + text + \"&type=movie&apikey=cda9abc8\")\n    .then(res => res.json()).then(data =>  {\n      this.setState({movies: data.Search});\n    }\n      );\n     //console.log('movies: ' + JSON.stringify(this.movies));\n    return res;\n  };\n\n  onTextChange = (event) => {\n    var text = event.target.value;\n    this.setState({searchText: text});\n   if(text.length > 0) {\n     this.searchMovies(text);\n   }\n }\n\n  nominateMovie = (movie) => {\n    var nomineesList = this.state.nominees;\n      if(this.state.nominees.length < 5){\n        nomineesList.push(movie);\n        //console.log(this.state.nominees.length)\n        this.setState({nominees: nomineesList});\n        \n      }\n      \n      //console.log(JSON.stringify(this.state.nominees));\n  }\n\n  removeNomination = (movie) => {\n    var nomineesList = this.state.nominees;\n    for(let i = 0; i < this.state.nominees.length; i++){\n      if(movie.imdbID == this.state.nominees[i].imdbID){\n        nomineesList.splice(i,1);\n        this.setState({nominees: nomineesList});\n      }\n    }\n  }\n\n  checkNominated = (movie) => {\n    for (let i = 0; i < this.state.nominees.length; i++){\n      if(movie.imdbID == this.state.nominees[i].imdbID){\n        return true;\n      }\n    }\n    return false;\n  }\n\n  render() {\n    return (\n      <div className=\"container text-light\">\n        {this.state.nominees.length == 5 &&\n        <div className=\"alert alert-primary sticky-top\" role=\"alert\">\n          <strong>You are done picking your 5 movie nominees.</strong>\n        </div>}\n        \n        {/* title */}\n        <h1 className='my-5'>The Shoppies</h1>\n  \n        {/* Search bar */}\n        <div className=\"row bg-dark p-4 m-0\">\n          <div className=\"col\">\n            <form className=\"form-group\">\n              <label>Movie Titles</label>\n              <input type=\"text\" className=\"form-control\" name=\"searchbox\" id=\"search\" aria-describedby=\"helpId\" placeholder=\"Search\" onChange={this.onTextChange}/>\n            </form>\n          </div>\n          \n        </div>\n  \n        <div className=\"row\">\n          {/* Search Results */}\n          <div className=\"col bg-dark m-3 p-4\">\n            <h4 className='mb-4'>Results for \"{this.state.searchText}\"</h4>\n           {typeof this.state.movies !== 'undefined' && this.state.movies.length > 0 &&\n              <MovieList movies={this.state.movies} onClick={this.nominateMovie} nominees={this.state.nominees} check={this.checkNominated} nominated={false}/>\n           }\n           \n  \n          </div>\n  \n          {/* nominations list */}\n        <div className=\"col bg-dark m-3 p-4\">\n          <h4 className='mb-4'>Nominations</h4>\n          {this.state.nominees.length > 0 &&\n              <MovieList movies={this.state.nominees} onClick={this.removeNomination} nominated={true}/>\n           }\n  \n        </div>\n        </div>\n      </div>\n  \n  );\n}\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}